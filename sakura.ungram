SourceFile =
    Item*

Export =
    'export'

Item =
    Export?
    TypeDeclaration

// Types
TypeDeclaration =
    'type' Name GenericParameterList? ConstraintList? '=' body:AnonymousType

AnonymousType =
      StructType
    | EnumType
    | TraitType

Type =
      NamedType
    | StructType
    | EnumType
    | TraitType

NamedType =
    'box'? Name GenericArgumentList?

StructType =
    'struct' body:StructFieldList

StructFieldList =
    '{' 
        fields:(StructField (',' StructField)* ','?)?
    '}'

StructField =
    Name ':' Type

EnumType =
    'enum' EnumVariantList

EnumVariantList =
    '{'
        variants:(EnumVariant (',' EnumVariant)* ','?)?
    '}'

EnumVariant =
    Name body:EnumVariantBody?

EnumVariantBody =
      EnumVariantBodyTypeList
    | EnumVariantBodyExpr

EnumVariantBodyTypeList = 
    '(' TypeList ')'

EnumVariantBodyExpr =
    '=' value:Expr

TraitType =
    'trait' '{' '}'

TypeList =
    types:(Type (',' Type)* ','?)?

// Generics
GenericParameterList =
    '[' params:(Name (',' Name)* ','?) ']'

TypeParameter =
    Name ('=' default_type:NamedType)?

GenericArgumentList =
    '[' arguments:(TypeArgument (',' TypeArgument)* ','?)? ']'

TypeArgument =
    NamedType

ConstraintList =
    Constraint*

Constraint =
    'where' param:Name ':' bounds:TypeList

TypeBoundList =
    bounds:(TypeBound ('+' TypeBound)* '+'?)

// TODO: Add additional bounds
TypeBound =
    Type

// Expressions
Expr =
      BinaryExpr
    | InterpolatedString
    | Literal
    | Name

BinaryExpr =
    lhs:Expr
    op:(
        '||' | '&&'
        | '==' | '!=' | '<=' | '>=' | '<' | '>'
        | '+' | '*' | '-' | '/' | '%' | '<<' | '>>' | '^' | '|' | '&'
        | '=' | '+=' | '/=' | '*=' | '%=' | '>>=' | '<<=' | '-=' | '|=' | '&=' | '^='
    )
    rhs:Expr

InterpolatedString =
    start:'string' parts:InterpolatedStringParts* end:'string'

InterpolatedStringParts =
    value:('string' | InterpolatedStringSlot)

InterpolatedStringSlot =
    '$' '{' Expr '}'

Name =
    'identifier'

Literal =
    value:(
        'int' | 'float'
        | 'string' | 'char' | 'byte'
        | 'true' | 'false'
    )
