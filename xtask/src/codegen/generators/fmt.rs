use miette::{bail, IntoDiagnostic, Result};
use xshell::{cmd, Shell};

pub(crate) fn format_src(text: &str) -> Result<String> {
    ensure_rustfmt()?;

    let shell = Shell::new().into_diagnostic()?;
    let _env = shell.push_env("RUSTUP_TOOLCHAIN", "stable");

    let cmd_output = cmd!(shell, "rustfmt --config blank_lines_lower_bound=1")
        .stdin(text)
        .read()
        .into_diagnostic()?
        .replace("]\n", "]")
        .replace(" !", "!");

    // NOTE: Run rustfmt a second time to remove extraneous newlines.
    let cmd_output = cmd!(shell, "rustfmt").stdin(cmd_output).read().into_diagnostic()?;

    Ok(format!(
        "{}\n\n{}\n",
        "//! Code generated by `cargo xtask codegen`; DO NOT EDIT.", cmd_output
    ))
}

fn ensure_rustfmt() -> Result<()> {
    let shell = Shell::new().into_diagnostic()?;

    let cmd_output = cmd!(shell, "rustfmt --version").read().into_diagnostic()?;
    if !cmd_output.contains("stable") {
        bail!(
            "Failed to run rustfmt from toolchain 'stable'. \
             Please run `rustup component add rustfmt --toolchain stable` to install it.",
        )
    }
    Ok(())
}
